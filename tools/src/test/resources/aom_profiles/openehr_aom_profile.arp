-- 
-- 	component:   openEHR Archetype Project
-- 	description: Archetype profile for openEHR RM schemas
-- 	keywords:    reference model, meta-model, archetypes
--	author:      Thomas Beale <thomas.beale@OceanInformatics.com>
--	support:     http://www.openehr.org/issues/browse/AWB
-- 	copyright:   Copyright (c) 2013- openEHR Foundation
-- 	license:     See end of file
-- 

profile_name = <"openEHR">

----------------------------------------------------------------------------------------
-- id or PERL regex based on id Reference Models to which this profile applies. 
-- This is used to match the 'schema_id' generated in BMM_SCHEMA class based on model 
-- publisher, model name, model release as defined in .bmm files.
--
rm_schema_pattern = <"openehr_ehr_extract_.*|openehr_rm_.*|openehr_adltest_.*|openehr_proc_.*">

----------------------------------------------------------------------------------------
-- id of terminologies and code sets to use
--
terminology_profile = <
	terminology_issuer = <"openehr">
	code_sets_issuer = <"openehr">
>

----------------------------------------------------------------------------------------
-- The effect of this attribute in visualisation is to generate the most natural tree or
-- grid-based view of an archetype definition, from the semantic viewpoint.
--
archetype_visualise_descendants_of = <"ITEM">

----------------------------------------------------------------------------------------
-- mappings from AOM built-in types used for RM types
--
aom_rm_type_mappings = <
	["TERMINOLOGY_CODE"] = <
		source_class_name = <"TERMINOLOGY_CODE">
		target_class_name = <"CODE_PHRASE">
		property_mappings = <
			["terminology_id"] = <
				source_property_name = <"terminology_id">
				target_property_name = <"terminology_id">
			>
			["code_string"] = <
				source_property_name = <"code_string">
				target_property_name = <"code_string">
			>
		>
	>
>

----------------------------------------------------------------------------------------
-- Equivalences of RM primitive types to in-built set of primitive types
-- Used to determine which AOM C_PRIMITIVE_OBJECT descendant is used for a primitive type

rm_primitive_type_equivalences = <
	["Octet"] = <"Integer">
	["Double"] = <"Real">
	["Integer64"] = <"Integer">
	["ISO8601_DATE"] = <"Date">
	["ISO8601_DATE_TIME"] = <"Date_time">
	["ISO8601_TIME"] = <"Time">
	["ISO8601_DURATION"] = <"Duration">
>

----------------------------------------------------------------------------------------
-- Allowed substitutions from AOM built-in types to RM types. AOM type on the left can be used
-- as a constrainer type for the RM type on the right, even though they are not equivalents.
-- Useful to deal with two problems: stringified values and numeric type promotions, e.g. 
-- Integer => Real or Double.
--

aom_rm_type_substitutions = <
	["DATE"] = <"String">
	["DATE_TIME"] = <"String">
	["TIME"] = <"String">
	["DURATION"] = <"String">
	["CODE_PHRASE"] = <"DV_CODED_TEXT">
	["INTEGER"] = <"Real">
	["REAL"] = <"Double">
	["Real"] = <"Double">
>

----------------------------------------------------------------------------------------
-- allowed substitutions from source RM lifecycle states to AOM lifecycle states
-- States on the value side (right hand side) must be the AOM states:
--
--	"unmanaged"
--	"in_development"
--		"draft"
--		"in_review"
--		"suspended"
--	"release_candidate"
--	"published"
--	"deprecated"
--		"obsolete"
--		"superseded"

--

aom_lifecycle_mappings = <
	["AuthorDraft"] = <"unmanaged">
	["Draft"] = <"in_development">
	["TeamReview"] = <"in_development">
	["Team Review"] = <"in_development">
	["ReviewSuspended"] = <"in_development">
	["Review Suspended"] = <"in_development">
	["Reassess"] = <"published">
	["Published"] = <"published">
	["Rejected"] = <"rejected">
>

